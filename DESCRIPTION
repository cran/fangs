Package: fangs
Title: Feature Allocation Neighborhood Greedy Search Algorithm
Version: 0.2.8
Authors@R: c(person(given = "David B.",family = "Dahl",role = c("aut","cre"),email = "dahl@stat.byu.edu",comment = c(ORCID = "0000-0002-8173-1547")),
    person(given = "R. Jacob", family = "Andros", role = c("aut"),email = "androsrj@gmail.com", comment = c(ORCID = "0000-0002-1289-385X")),
    person(given = "Devin J.",family = "Johnson",role = c("aut"),email = "devin.j.johnson7@gmail.com",comment = c(ORCID = "0000-0003-2619-6649")),
    person(given = "Alex", family = "Crichton", email = "alex@alexcrichton.com", role = "cph", comment = "Rust crates: proc-macro2, cfg-if. See AUTHORS file."),
    person(given = "Andrii", family = "Dmytrenko", email = "andrii.dmytrenko@deliveroo.co.uk", role = "cph", comment = "Rust crate: lapjv. See AUTHORS file."),
    person(given = "Brendan", family = "Zabarauskas", email = "bjzaba@yahoo.com.au", role = "cph", comment = "Rust crate: approx. See AUTHORS file."),
    person(given = "David B.", family = "Dahl", email = "dahl@stat.byu.edu", role = "cph", comment = "Rust crates: roxido, roxido_macro. See AUTHORS file."),
    person(given = "David", family = "Tolnay", email = "dtolnay@gmail.com", role = "cph", comment = "Rust crates: syn, proc-macro2, quote, unicode-ident. See AUTHORS file."),
    person(given = "DutchGhost", role = "cph", comment = "Rust crate: matrixmultiply.  See AUTHORS files."),
    person(given = "Enthought, Inc.", role = "cph", comment = "Rust crates: ndarray.  See AUTHORS files."),
    person(given = "Gilad", family = "Naaman", email = "gilad.naaman@gmail.com", role = "cph", comment = "Rust crate: memoffset. See AUTHORS file."),
    person(given = "Jim", family = "Turner", role = "cph", comment = "Rust crate: ndarray. See AUTHORS file."),
    person(given = "Josh", family = "Stone", email = "cuviper@gmail.com", role = "cph", comment = "Rust crates: rayon, autocfg, rayon-core. See AUTHORS file."),
    person(given = "matrixmultiply authors", role = "cph", comment = "Rust crate: matrixmultiply.  See AUTHORS files."),
    person(given = "Melissa", family = "O'Neill", role = "cph", comment = "Rust crate: rand_pcg. See AUTHORS file."),
    person(given = "ndarray developers", role = "cph", comment = "Rust crate: ndarray.  See AUTHORS files."),
    person(given = "Niko", family = "Matsakis", email = "niko@alum.mit.edu", role = "cph", comment = "Rust crates: rayon-core, rayon. See AUTHORS file."),
    person(given = "Paul", family = "Dicker", role = "cph", comment = "Rust crate: rand_pcg. See AUTHORS file."),
    person(given = "PCG Project contributors", role = "cph", comment = "Rust crate: rand_pcg.  See AUTHORS files."),
    person(given = "Ralf", family = "Jung", role = "cph", comment = "Rust crate: memoffset. See AUTHORS file."),
    person(given = "rawpointer developers", role = "cph", comment = "Rust crate: rawpointer.  See AUTHORS files."),
    person(given = "R. Janis", family = "Goldschmidt", role = "cph", comment = "Rust crate: matrixmultiply. See AUTHORS file."),
    person(given = "SciPy Developers", role = "cph", comment = "Rust crate: ndarray.  See AUTHORS files."),
    person(given = "scopeguard developers", role = "cph", comment = "Rust crate: scopeguard.  See AUTHORS files."),
    person(given = "Sean", family = "McArthur", email = "sean@seanmonstar.com", role = "cph", comment = "Rust crate: num_cpus. See AUTHORS file."),
    person(given = "Stefan", family = "Lankes", role = "cph", comment = "Rust crate: hermit-abi. See AUTHORS file."),
    person(given = "The Cranelift Project Developers", role = "cph", comment = "Rust crate: wasi. See AUTHORS file."),
    person(given = "The Crossbeam Project Developers", role = "cph", comment = "Rust crates: crossbeam-utils, crossbeam-epoch, crossbeam-deque, crossbeam-channel. See AUTHORS file."),
    person(given = "The CryptoCorrosion Contributors", role = "cph", comment = "Rust crates: ppv-lite86, rand_chacha. See AUTHORS file."),
    person(given = "The Go Authors", role = "cph", comment = "Rust crate: crossbeam-channel.  See AUTHORS files."),
    person(given = "The Rand Project Developers", role = "cph", comment = "Rust crates: rand_chacha, getrandom, rand_core, rand, rand_pcg. See AUTHORS file."),
    person(given = "The Rust Project Developers", role = "cph", comment = "Rust crates: quote, rayon, crossbeam-channel, rand, num-traits, getrandom, libc, rand_chacha, num-complex, num-integer, rand_core, log. See AUTHORS file."),
    person(given = "Ulrik Sverdrup", family = "\"bluss\"", role = "cph", comment = "Rust crate: scopeguard, matrixmultiply, either, rawpointer, itertools, ndarray. See AUTHORS file."),
    person(given = "Unicode, Inc.", role = "cph", comment = "Rust crate: unicode-ident.  See AUTHORS files.")
    )
Description: A neighborhood-based, greedy search algorithm is performed to estimate a feature allocation by minimizing the expected loss based on posterior samples from the feature allocation distribution. The method is currently under peer review but an earlier draft is available in Dahl, Johnson, and Andros (2022+) <doi:10.48550/arXiv.2207.13824>.
License: MIT + file LICENSE | Apache License 2.0
BugReports: https://github.com/dbdahl/fangs/issues
Depends: R (>= 4.2.0)
SystemRequirements: Cargo (>= 1.56) for installation from source: see
        INSTALL file
Encoding: UTF-8
RoxygenNote: 7.2.3
NeedsCompilation: yes
Packaged: 2022-12-19 23:46:43 UTC; dahl
Author: David B. Dahl [aut, cre] (<https://orcid.org/0000-0002-8173-1547>),
  R. Jacob Andros [aut] (<https://orcid.org/0000-0002-1289-385X>),
  Devin J. Johnson [aut] (<https://orcid.org/0000-0003-2619-6649>),
  Alex Crichton [cph] (Rust crates: proc-macro2, cfg-if. See AUTHORS
    file.),
  Andrii Dmytrenko [cph] (Rust crate: lapjv. See AUTHORS file.),
  Brendan Zabarauskas [cph] (Rust crate: approx. See AUTHORS file.),
  David B. Dahl [cph] (Rust crates: roxido, roxido_macro. See AUTHORS
    file.),
  David Tolnay [cph] (Rust crates: syn, proc-macro2, quote,
    unicode-ident. See AUTHORS file.),
  DutchGhost [cph] (Rust crate: matrixmultiply.  See AUTHORS files.),
  Enthought, Inc. [cph] (Rust crates: ndarray.  See AUTHORS files.),
  Gilad Naaman [cph] (Rust crate: memoffset. See AUTHORS file.),
  Jim Turner [cph] (Rust crate: ndarray. See AUTHORS file.),
  Josh Stone [cph] (Rust crates: rayon, autocfg, rayon-core. See AUTHORS
    file.),
  matrixmultiply authors [cph] (Rust crate: matrixmultiply.  See AUTHORS
    files.),
  Melissa O'Neill [cph] (Rust crate: rand_pcg. See AUTHORS file.),
  ndarray developers [cph] (Rust crate: ndarray.  See AUTHORS files.),
  Niko Matsakis [cph] (Rust crates: rayon-core, rayon. See AUTHORS file.),
  Paul Dicker [cph] (Rust crate: rand_pcg. See AUTHORS file.),
  PCG Project contributors [cph] (Rust crate: rand_pcg.  See AUTHORS
    files.),
  Ralf Jung [cph] (Rust crate: memoffset. See AUTHORS file.),
  rawpointer developers [cph] (Rust crate: rawpointer.  See AUTHORS
    files.),
  R. Janis Goldschmidt [cph] (Rust crate: matrixmultiply. See AUTHORS
    file.),
  SciPy Developers [cph] (Rust crate: ndarray.  See AUTHORS files.),
  scopeguard developers [cph] (Rust crate: scopeguard.  See AUTHORS
    files.),
  Sean McArthur [cph] (Rust crate: num_cpus. See AUTHORS file.),
  Stefan Lankes [cph] (Rust crate: hermit-abi. See AUTHORS file.),
  The Cranelift Project Developers [cph] (Rust crate: wasi. See AUTHORS
    file.),
  The Crossbeam Project Developers [cph] (Rust crates: crossbeam-utils,
    crossbeam-epoch, crossbeam-deque, crossbeam-channel. See AUTHORS
    file.),
  The CryptoCorrosion Contributors [cph] (Rust crates: ppv-lite86,
    rand_chacha. See AUTHORS file.),
  The Go Authors [cph] (Rust crate: crossbeam-channel.  See AUTHORS
    files.),
  The Rand Project Developers [cph] (Rust crates: rand_chacha, getrandom,
    rand_core, rand, rand_pcg. See AUTHORS file.),
  The Rust Project Developers [cph] (Rust crates: quote, rayon,
    crossbeam-channel, rand, num-traits, getrandom, libc, rand_chacha,
    num-complex, num-integer, rand_core, log. See AUTHORS file.),
  Ulrik Sverdrup "bluss" [cph] (Rust crate: scopeguard, matrixmultiply,
    either, rawpointer, itertools, ndarray. See AUTHORS file.),
  Unicode, Inc. [cph] (Rust crate: unicode-ident.  See AUTHORS files.)
Maintainer: David B. Dahl <dahl@stat.byu.edu>
Repository: CRAN
Date/Publication: 2022-12-20 00:00:02 UTC
